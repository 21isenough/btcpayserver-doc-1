(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{682:function(e,t,a){"use strict";a.r(t);var s=a(25),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"joinmarket-support"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#joinmarket-support"}},[e._v("#")]),e._v(" Joinmarket support")]),e._v(" "),a("p",[e._v("JoinMarket is software to create a special kind of bitcoin transaction called a CoinJoin transaction. Its aim is to improve the confidentiality and privacy of bitcoin transactions.")]),e._v(" "),a("p",[e._v("You will be able to use your bitcoin to help other protect their privacy, while earning a yield for this service.")]),e._v(" "),a("p",[e._v("See "),a("a",{attrs:{href:"https://github.com/JoinMarket-Org/JoinMarket-Docs/blob/master/High-level-design.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("the documentation of the joinmarket project"),a("OutboundLink")],1),e._v(" for more details.")]),e._v(" "),a("p",[e._v("This is a very advanced functionality, and there is no easy way to recover if something goes wrong.")]),e._v(" "),a("p",[e._v("For hardcore bitcoiners only.")]),e._v(" "),a("h2",{attrs:{id:"how-to-use"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use"}},[e._v("#")]),e._v(" How to use")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("BTCPAYGEN_ADDITIONAL_FRAGMENTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BTCPAYGEN_ADDITIONAL_FRAGMENTS")]),e._v(';opt-add-joinmarket"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" btcpay-setup.sh -i\n")])])]),a("p",[e._v("Then you need to setup your joinmarket wallet:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("jm.sh wallet-tool-generate\njm.sh set-wallet "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("wallet_file_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("Once done, you will need to send some money to the joinmarket wallet:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("jm.sh wallet-tool\n")])])]),a("h2",{attrs:{id:"how-to-fine-tune"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-fine-tune"}},[e._v("#")]),e._v(" How to fine tune?")]),e._v(" "),a("p",[e._v("Follow the "),a("RouterLink",{attrs:{to:"/Docker/#how-can-i-customize-the-generated-docker-compose-file"}},[e._v("How can I customize the generated docker-compose file?")]),e._v(" instructions.\nThen pass as environment variable the attribute you want to modify, prefixed by "),a("code",[e._v("jm_")]),e._v(".")],1),e._v(" "),a("p",[e._v("Our system is using the default configuration of joinmarket, then replace the values your specify like this.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("joinmarket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("jm_gaplimit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3000")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("jm_txfee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("300")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("jm_cjfee_a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("500")]),e._v("\n")])])]),a("h2",{attrs:{id:"managing-your-wallet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#managing-your-wallet"}},[e._v("#")]),e._v(" Managing your wallet")]),e._v(" "),a("p",[e._v("By running "),a("code",[e._v("jm.sh")]),e._v(" without parameter, you will get a bunch of command that you can run such as:")]),e._v(" "),a("p",[e._v("For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Usage:\n------\n\nTooling to setup your joinmarket yield generator\n\n    exec: Run the specified joinmarket script\n    wallet-tool: Run wallet-tools.py on the wallet\n    wallet-tool-generate: Generate a new wallet\n    set-wallet: Set the wallet that the yield generator need to use\n    logs: See logs of the yield generator (add -f to follow the logs)\n    bash: Open an interactive bash session in the joinmarket container\n    receive-payjoin: Receive a payjoin payment (this will stop the yield generator until the payment is received)\n    sendpayment: Send a payjoin through coinjoin (password needed, this will stop the yield generator until the payment is received)\n    start: Start the yield generator (started by default)\n    stop: Stop the yield generator\n\nExample:\n    * jm.sh wallet-tool-generate\n    * jm.sh set-wallet wallet.jmdat mypassword\n    * jm.sh wallet-tool\n    * jm.sh receive-payjoin\n    * jm.sh sendpayment <address> <amount>\n    * jm.sh wallet-tool history\n    * jm.sh logs -f\n    * jm.sh bash\n    * jm.sh start\n    * jm.sh stop\n")])])]),a("p",[e._v("Note "),a("code",[e._v("jm.sh")]),e._v(" commands are wrapper around joinmarket scripts. Those wrapper makes your life easier by:")]),e._v(" "),a("ol",[a("li",[e._v("Avoiding, when it can, that you enter wallet file name/ wallet password")]),e._v(" "),a("li",[e._v("Stop and Start the yield generator for the duration of the operation")])]),e._v(" "),a("p",[e._v("In some cases you might want to get access to the raw scripts of joinmarket, in which case, you need to get the command prompt into the container.")]),e._v(" "),a("h2",{attrs:{id:"getting-command-prompt-into-the-container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-command-prompt-into-the-container"}},[e._v("#")]),e._v(" Getting command prompt into the container")]),e._v(" "),a("p",[e._v("You can connect to the container and have direct access to joinmarket scripts such as:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("jm.sh "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v("\nsendpayment.py wallet.jmdat "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n")])])]),a("p",[e._v("However, you might get the following error:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Failed to load wallet, error message: RetryableStorageError('File is currently in use (locked by pid 12822). If this is a leftover from a crashed instance you need to remove the lock file `/root/.joinmarket/wallets/.wallet.jmdat.lock` manually.')\n")])])]),a("p",[e._v("This is because the yield generator is running.")]),e._v(" "),a("p",[e._v("You can stop and start the yield generator with the helper scripts in the container "),a("code",[e._v("stop.sh")]),e._v(" and "),a("code",[e._v("start.sh")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"troubleshooting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[e._v("#")]),e._v(" Troubleshooting")]),e._v(" "),a("p",[e._v("Run "),a("code",[e._v("jm.sh logs")]),e._v(" to get the logs of the yield generator.")]),e._v(" "),a("p",[e._v("A common issue is that a lock file is present, preventing it to restart.\nIn which case, connect directly into the container with "),a("code",[e._v("jm.sh bash")]),e._v(" and delete the problematic file.")])])}),[],!1,null,null,null);t.default=n.exports}}]);